"use strict";var r=require("@juanelas/base64"),e=require("scrypt-pbkdf");async function t(t,a){const s={logN:17,r:8,p:1,...a?.scryptParams},n={N:2**s.logN,r:s.r,p:s.p},o=void 0!==a?.saltBase64NoPadding?r.decode(a.saltBase64NoPadding):e.salt(),d=r.encode(o,!1,!1),c=a?.derivedKeyLength??32,l=r.encode(await e.scrypt(t,o,c,n),!1,!1);return`$scrypt$ln=${s.logN},r=${s.r},p=${s.p}$${d}$${l}`}exports.hash=t,exports.verify=async function(r,e){const a=[...e.matchAll(/^\$scrypt\$ln=(\d{1,2}),r=(\d{1,2}),p=(\d{1,2})\$([a-zA-Z0-9/+]{22})\$([a-zA-Z0-9/+]{22,})$/g)];if(1!==a.length)throw new Error("Invalid MCFstring format");const s=Number(a[0][1]),n=Number(a[0][2]),o=Number(a[0][3]),d=a[0][4],c=2**(Math.floor(Math.log2(6*a[0][5].length))-3);return await t(r,{saltBase64NoPadding:d,scryptParams:{logN:s,r:n,p:o},derivedKeyLength:c})===e};
//# sourceMappingURL=index.node.js.map
